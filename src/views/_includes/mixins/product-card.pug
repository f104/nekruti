mixin product-card(data)
  .product-card(class= data.inCart ? '_in-cart' : '')
    a(href="#").product-card__picture-wrapper
      +picture({
        url: data.image,
        alt: data.title,
        _0: {width: 262, height: 179},
        _1024: {width: 398, height: 271},
        _1440: {width: 262, height: 179},
      }).product-card__picture
      span.product-card__in-cart-tag.product-card__in-cart
        span В корзине
        +svgsprite('check')(aria-hidden="true")
    .product-card__content
      .product-card__content__head
        a(href="#").product-card__title=data.title
        p.product-card__price=data.price
          if data.priceOld 
            del.product-card__price__old=data.priceOld
      p.product-card__text=data.text

      form(data-native-action).js-form.product-card__form
        input(type="hidden" name="id" value="15")
        button(
          type="button"
          name="ms2_action" 
          value="cart/add"
          onclick="this.closest('.product-card').classList.add('_in-cart'); this.closest('form').querySelector('input[type=number]').value = 1; this.closest('form').querySelectorAll('.input-common__button-number').forEach(el => el.removeAttribute('disabled'))"
        ).btn._primary.product-card__buy Купить
        +input-number({
          id: 'form_number',
          errorMessage: 'Error message',
          classes: 'product-card__in-cart',
        })(
          type='number'
          name='number'
          min='0'
          max='10'
          value='1'
          step='1'
          data-min-num-error-message='Значение должно быть больше или равно 0'
          data-max-num-error-message='Значение должно быть меньше или равно 10'
          data-step-num-error-message='Значение должно быть кратно 1'
          required
          oninput="if (this.value == 0) { this.closest('.product-card').classList.remove('_in-cart') }"
        )
